name: Playwright Tests (reusable)

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      headless:
        required: false
        type: boolean
        default: true

env:
  NODE_VERSION: "16"
  PLAYWRIGHT_PROJECT: ${{ inputs.project }}
  HEADLESS: ${{ inputs.headless }}

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm" # https://github.com/actions/setup-node#caching-global-packages-data

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Wait for Netlify Deployment
        uses: probablyup/wait-for-netlify-action@3.2.0
        id: waitForDeployment
        with:
          site_id: ${{ secrets.NETLIFY_SITE_ID }}
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Run Playwright tests (headless)
        if: env.HEADLESS == 'true'
        env:
          PLAYWRIGHT_BASE_URL: ${{ steps.waitForDeployment.outputs.url }}
        run: npx playwright test --project ${{ env.PLAYWRIGHT_PROJECT }}

      - name: Run Playwright tests (headed)
        if: env.HEADLESS == 'false'
        env:
          PLAYWRIGHT_BASE_URL: ${{ steps.waitForDeployment.outputs.url }}
        run: xvfb-run npx playwright test --project ${{ env.PLAYWRIGHT_PROJECT }} --headed

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report-${{ env.PLAYWRIGHT_PROJECT }}
          path: playwright-report/
          retention-days: 1
